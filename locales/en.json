{
  " is a React hook that provides access to the translation function (t) and current language state. It can only be used in Client Components.": "",
  " is the root component that provides internationalization context to your entire application. It manages language state, handles cookie persistence, and ensures zero hydration mismatch in SSR.": "",
  "⏳ 로그인 중...": "",
  "⏳ 로딩 중...": "",
  "⏳ 로딩...": "",
  "⏳ 승인 대기 중": "",
  "✅ 승인됨": "",
  "✓ 승인": "",
  "✓ 승인됨": "",
  "✗ 삭제": "",
  "📋 전체": "",
  "📛 프로젝트 이름 (선택)": "",
  "📧 연락처 이메일 (선택)": "",
  "📧 이메일": "",
  "🔑 비밀번호": "",
  "🔗 프로젝트 URL (필수)": "",
  "🔗 Firestore 인덱스 생성 링크:": "",
  "🚀 로그인": "",
  "🚀 제출하기": "",
  "🚪 로그아웃": "",
  "가\n              있으면 더 좋은 썸네일을 얻을 수 있습니다": "",
  "검토 후 공개됩니다 😊": "",
  "공개 접근 가능한 URL": "",
  "관리자": "",
  "관리자 대시보드": "",
  "관리자 로그인": "",
  "너무 많은 로그인 시도가 있었습니다. 잠시 후 다시 시도해주세요.": "",
  "네트워크 오류가 발생했습니다. 인터넷 연결을 확인해주세요.": "",
  "닫기": "",
  "대기 중": "",
  "대시보드": "",
  "도메인이 존재하지 않거나 접근할 수 없습니다": "",
  "등록되지 않은 이메일입니다.": "",
  "로그인에 실패했습니다.": "",
  "메뉴 열기": "",
  "메타데이터 서비스": "",
  "메타데이터 서비스가 예상치 못한 응답을 반환했습니다": "",
  "메타데이터 서비스에 일시적인 문제가 있습니다. 잠시 후 다시 시도해주세요.": "",
  "메타데이터 서비스에서 오류가 발생했습니다": "",
  "메타데이터 서비스의 요청 한도를 초과했습니다": "",
  "메타데이터 서비스의 요청 한도를 초과했습니다. 잠시 후 다시 시도해주세요.": "",
  "메타데이터 추출에 실패했습니다": "",
  "미리보기 ▶": "",
  "미리보기 생성에 실패했습니다.": "",
  "미리보기 생성이 실패하면": "",
  "바로가기": "",
  "비밀번호가 올바르지 않습니다.": "",
  "사이트 방문하기": "",
  "삭제 중 오류가 발생했습니다.": "",
  "삭제에 실패했습니다.": "",
  "서버 예제": "",
  "서버 응답을 처리할 수 없습니다. 잠시 후 다시 시도해주세요.": "",
  "서버 응답을 처리할 수 없습니다. URL이 올바른지 확인하고 다시 시도해주세요.": "",
  "쇼케이스": "",
  "승인 대기 중인 프로젝트가 없습니다": "",
  "승인 알림을 받으려면 이메일을 입력하세요": "",
  "승인 중 오류가 발생했습니다.": "",
  "승인된 프로젝트가 없습니다": "",
  "승인됨": "",
  "승인에 실패했습니다.": "",
  "시작하기": "",
  "아직 제출된 프로젝트가 없습니다": "",
  "언어": "",
  "에서 Authentication 활성화": "",
  "예상치 못한 응답": "",
  "올바르지 않은 URL 형식입니다. https:// 로 시작하는 전체 URL을 입력해주세요.": "",
  "요청 시간이 초과되었습니다. 네트워크 연결을 확인하고 다시 시도해주세요.": "",
  "요청 한도": "",
  "위 정보 제공에 동의하며, i18nexus 쇼케이스에 공개될 수 있음을\n              이해합니다. 관리자 검토 후 공개됩니다. (필수)": "",
  "을\n              사용하세요 (localhost, 127.0.0.1 불가)": "",
  "을 입력하세요 (예:\n              https://example.com)": "",
  "이메일 또는 비밀번호가 올바르지 않습니다.": "",
  "이미지 다운로드": "",
  "이미지 확대": "",
  "입력하지 않으면 자동 추출된 제목을 사용합니다": "",
  "자동 미리보기": "",
  "자동 수집된 제목을 변경하려면 입력하세요": "",
  "잠시 후 다시 시도해주세요": "",
  "전체 제출": "",
  "전체 URL": "",
  "접근할 수 없습니다": "",
  "정말 삭제하시겠습니까?": "",
  "제출 목록을 불러오는데 실패했습니다.": "",
  "제출 완료!": "",
  "제출 중...": "",
  "제출 팁": "",
  "제출 후 관리자 검토를 거쳐 24시간 이내에 공개됩니다": "",
  "제출된 프로젝트가 없습니다": "",
  "제출에 실패했습니다. 다시 시도해주세요.": "",
  "처리할 수 없습니다": "",
  "프로젝트 등록": "",
  "프로젝트에": "",
  "하거나 잠시\n              후 다시 시도해주세요": "",
  "한국어": "",
  "홈": "",
  "환영합니다": "",
  "Add English Translations": "",
  "Add English translations to en.json file": "",
  "Add I18nProvider to layout.tsx": "",
  "Add to your root layout.tsx": "",
  "Additional configuration for language management.": "",
  "Adds only new keys from code": "",
  "Advanced Configuration": "",
  "After": "",
  "After (translated)": "",
  "After running i18n-wrapper, some files may have errors because:": "",
  "All CLI tools read from": "",
  "Always wrap your entire application with I18nProvider at the root layout level to ensure all components have access to translations.": "",
  "API Reference": "",
  "App Directory Note": "",
  "Auto wrap Korean text": "",
  "Auto-detect and wrap hardcoded strings": "",
  "Auto-wrap hardcoded strings": "",
  "Automate your internationalization workflow with intelligent tools": "",
  "Automatic import injection": "",
  "Automatic language detection from cookies": "",
  "Automatic re-rendering on language change": "",
  "Automatic Text Wrapping": "",
  "Automatic text wrapping with CLI": "",
  "Automatically saves language choice": "",
  "Automatically wrap hardcoded Korean strings in your code": "",
  "Automatically wrap Korean/English text with t() function": "",
  "Automatically wraps Korean text with t() and adds imports": "",
  "Automation": "",
  "Available Tools": "",
  "Avoid nesting I18nProvider components. Use only one provider at the root level.": "",
  "Back to Home": "",
  "Basic Setup": "",
  "Basic Setup (Client Components Only)": "",
  "Basic Usage": "",
  "Before": "",
  "Before (auto-generated)": "",
  "Best Practices": "",
  "Better performance": "",
  "Better SEO": "",
  "By reading the language from cookies on the server, you ensure that the initial HTML matches what the client expects, preventing hydration mismatches.": "",
  "Check the error and decide whether to add &apos;use client&apos; or use createServerTranslation()": "",
  "CLI 도구": "",
  "CLI Tools": "",
  "Client Component (app/page.tsx)": "",
  "Client Components": "",
  "Complete React i18n Toolkit": "",
  "Complete React i18n toolkit with cookie-based language management and SSR support": "",
  "Complete step-by-step guide to setup i18nexus in your project": "",
  "Complete Workflow": "",
  "Complex configuration": "",
  "Component Type": "",
  "Config-based, zero setup needed": "",
  "Configuration File": "",
  "Configuration file for your project": "",
  "Configure Google Sheets integration": "",
  "Cookie Persistence": "",
  "Cookie-based language persistence": "",
  "Cookie-based persistence": "",
  "Core Features": "",
  "Create config file": "",
  "Create Google Cloud project": "",
  "Create lib/i18n.ts": "",
  "Create Service Account": "",
  "Current Language": "",
  "Current State": "",
  "Data updated hourly from npm public API": "",
  "Detailed logging and error messages": "",
  "Detects Korean in string literals": "",
  "Detects Korean in template literals": "",
  "Detects Korean text in JSX elements": "",
  "Developer Experience": "",
  "Directory for translation files (ko.json, en.json)": "",
  "Displaying Current Language": "",
  "Do: Handle missing translations gracefully": "",
  "Do: Place at the root of your app": "",
  "Do: Use descriptive keys": "",
  "Do: Use server-side language detection": "",
  "Don't: Change initialLanguage dynamically": "",
  "Don't: Construct keys with complex logic": "",
  "Don't: Nest multiple providers": "",
  "Don't: Use in Server Components": "",
  "Done!": "",
  "Download": "",
  "Download credentials JSON": "",
  "Download Statistics": "",
  "Download translations": "",
  "Download translations from Google Sheets (incremental)": "",
  "Downloads last month": "",
  "Dynamic language switching": "",
  "Dynamic Translation Keys": "",
  "Enable Google Sheets API": "",
  "English translations (needs manual translation)": "",
  "Explore CLI Tools": "",
  "Extract Keys": "",
  "Extract translation keys": "",
  "Extract Translation Keys": "",
  "Extract translation keys and merge with existing files intelligently": "",
  "Extract translation keys from your codebase": "",
  "Failed to load": "",
  "Fallback to key if translation missing": "",
  "Faster initial load": "",
  "File Management": "",
  "Firebase 설정이 필요하신가요?": "",
  "Firebase 연결 확인 중...": "",
  "Firebase Authentication이 올바르게 설정되지 않았습니다. Firebase Console에서 Authentication을 활성화해주세요.": "",
  "Firestore Database가 설정되지 않았습니다. FIREBASE_QUICK_SETUP.md를 참고하세요.": "",
  "Firestore Database도 생성 필요 (규칙: 테스트 모드)": "",
  "Fix manually": "",
  "For Client Components": "",
  "For Next.js App Router": "",
  "For Next.js applications, always read the language from cookies on the server to prevent hydration mismatches.": "",
  "For Server Components": "",
  "For team collaboration, you can sync with Google Sheets": "",
  "Force overwrite all translations from Google Sheets": "",
  "Force sync for full overwrites": "",
  "Full interactivity": "",
  "Full type safety included": "",
  "Fully rendered HTML with correct language": "",
  "Generate translation files from wrapped text": "",
  "Getting Started": "",
  "Google Sheets integration": "",
  "Google Sheets Integration": "",
  "Google Sheets Setup": "",
  "Google Sheets sync": "",
  "Home": "",
  "Hook for accessing translation function in client components": "",
  "Hook for accessing translation functions in client components": "",
  "Hook for changing languages with cookie persistence": "",
  "Hook for language switching and state management": "",
  "How to use": "",
  "Hydration issues in SSR": "",
  "i18n-download": "",
  "i18n-download-force": "",
  "i18n-extractor": "",
  "i18n-upload": "",
  "i18n-wrapper": "",
  "i18nexus": "",
  "i18nexus automatically returns the key if translation is missing, making debugging easier.": "",
  "i18nexus Documentation": "",
  "i18nexus Library": "",
  "i18nexus Solutions": "",
  "i18nexus-tools": "",
  "i18nexus-tools Documentation": "",
  "i18nexus를 사용하는 프로젝트를 공유하고 커뮤니티에 영감을 주세요": "",
  "I18nProvider": "",
  "If the file is a Server Component (no &apos;use client&apos;), you need to use server utilities instead of hooks": "",
  "If you're using Next.js App Router, use the -p flag to specify the correct directory": "",
  "Important: Check for Server Components": "",
  "in your project root": "",
  "Incremental updates (safe)": "",
  "Initialize Project": "",
  "Install": "",
  "Install globally (recommended)": "",
  "Installation": "",
  "Interactive Demo": "",
  "Keep translation key logic simple and predictable.": "",
  "Key Features": "",
  "Korean translations (auto-filled)": "",
  "Larger bundle size": "",
  "Learn how to change languages dynamically": "",
  "Learn how to set up the translation provider": "",
  "Learn how to use translations in Server Components": "",
  "Learn how to use translations in your components": "",
  "Learn more": "",
  "Learn more about I18nProvider": "",
  "Live Demo": "",
  "Loading...": "",
  "Manual file management": "",
  "Manual text wrapping": "",
  "Needs 'use client'": "",
  "No client interactivity": "",
  "No hydration mismatch": "",
  "No language switching": "",
  "No layout shift on load": "",
  "No React Context or hooks sent to client": "",
  "Note": "",
  "object (optional)": "",
  "object (required)": "",
  "Object containing translation keys and values for all supported languages.": "",
  "Open Graph 메타 태그": "",
  "Open locales/en.json and add English translations": "",
  "Optional": "",
  "Optional: Google Sheets Integration": "",
  "Or use without installing": "",
  "Or use yarn:": "",
  "Overview": "",
  "Perfect Next.js compatibility": "",
  "Powerful automation tools for wrapping text and managing translations": "",
  "Powerful CLI tools to automate your i18n workflow - from code transformation to Google Sheets integration": "",
  "Preserves all existing translations": "",
  "Preserves code formatting": "",
  "Preserves existing translations": "",
  "Props": "",
  "Provider": "",
  "Quick Start": "",
  "Quick Workflow": "",
  "React Context provider with cookie-based language persistence": "",
  "React Context provider with cookie-based language persistence and SSR support": "",
  "React hook for accessing translation functions in client components": "",
  "React library with I18nProvider, hooks, and server components support": "",
  "ReactNode (required)": "",
  "Real-time download stats from npm registry": "",
  "Real-World Example": "",
  "Recommended Structure": "",
  "Result": "",
  "Result files": "",
  "Return Value": "",
  "Run": "",
  "See Also": "",
  "Server and client always in sync": "",
  "Server Component Benefits": "",
  "Server Component Example": "",
  "Server Components": "",
  "Server Layout (app/layout.tsx)": "",
  "Server-Side Rendering (Next.js App Router)": "",
  "Server-side translation with zero hydration mismatch": "",
  "Set up I18nProvider": "",
  "Setup I18nProvider": "",
  "Setup I18nProvider in layout.tsx with cookie detection": "",
  "Setup Provider": "",
  "Setup Required": "",
  "Share Sheet with service account": "",
  "Showcase 관리 대시보드에 접근하려면 로그인하세요": "",
  "Showcase 등록하기": "",
  "Showcase 제출 관리": "",
  "Shows detailed statistics": "",
  "Sign-in method에서 \"Email/Password\" 활성화": "",
  "Simple API with t() function": "",
  "Simple file structure: locales/en.json, locales/ko.json": "",
  "Simple setup with defaults": "",
  "Skips already wrapped text": "",
  "Smaller bundle size": "",
  "Smaller JavaScript bundle": "",
  "Smart Detection": "",
  "Smart file merging": "",
  "Smart Key Extraction": "",
  "Smart key generation with spacing preserved": "",
  "Smart Merging Features": "",
  "Smart merging of new keys": "",
  "Sorts keys alphabetically": "",
  "SSR Ready": "",
  "Store in lib/translations/ as JSON": "",
  "string (required)": "",
  "Switch Language": "",
  "Sync & Collaboration": "",
  "Sync translations with Google Sheets for team collaboration": "",
  "Sync with Google Sheets (optional)": "",
  "Sync with Sheets": "",
  "Team Collaboration": "",
  "The currently active language code.": "",
  "The initial language code to use. Should match one of the keys in translations object.": "",
  "The initialLanguage prop should be set once. Use changeLanguage() from useLanguageSwitcher to change languages dynamically.": "",
  "This demo follows the recommended Next.js App Router structure:": "",
  "This page is a Server Component - no 'use client' directive needed!": "",
  "This will automatically wrap all Korean text with t()": "",
  "This will create": "",
  "This will install both the React components and CLI tools": "",
  "This will scan your code and create/update translation files": "",
  "Tip": "",
  "to automatically create this file": "",
  "To change language on this page, use the language switcher in the header (Client Component) and the page will reload with the new language from the cookie.": "",
  "Traditional i18n Problems": "",
  "Translate": "",
  "Translation Examples": "",
  "Translation file": "",
  "Translation Files": "",
  "Translation function that returns the translated string for the given key.": "",
  "Translation Key": "",
  "Translation Method": "",
  "Translations rendered on server": "",
  "Try entering: Welcome, Getting Started, CLI Tools, etc.": "",
  "Try switching - saved in cookies!": "",
  "Type-safe language management": "",
  "Type-safe with TypeScript": "",
  "TypeScript": "",
  "TypeScript support": "",
  "Upload": "",
  "Upload local translations to Google Sheets": "",
  "Upload to Google Sheets for team translation": "",
  "Upload translations": "",
  "URL에 접근할 수 없습니다": "",
  "URL에 접근할 수 없습니다. 공개 접근 가능한 URL인지 확인해주세요.": "",
  "URL을 다시 확인": "",
  "URL을 입력하면 자동으로 제목, 설명, 썸네일을 추출합니다": "",
  "Usage Examples": "",
  "Use &apos;use client&apos; with useTranslation() hook": "",
  "Use clear, descriptive translation keys that indicate the content.": "",
  "Use createServerTranslation()": "",
  "Use Hooks": "",
  "Use in components": "",
  "Use useTranslation() hook": "",
  "Use useTranslation() in components": "",
  "useLanguageSwitcher": "",
  "Users 탭에서 관리자 계정 추가": "",
  "useTranslation": "",
  "useTranslation is a client-side hook. For Server Components, use createServerTranslation().": "",
  "View documentation": "",
  "View Documentation": "",
  "Why i18nexus?": "",
  "Why this matters": "",
  "Wrap Korean Text": "",
  "Your app is fully internationalized and ready to deploy": "",
  "Your application components that need access to translations.": "",
  "Zero Hydration": "",
  "Zero hydration issues": "",
  "Zero hydration mismatch": "",
  "Zero hydration mismatch in Next.js": ""
}